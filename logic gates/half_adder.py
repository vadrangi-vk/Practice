'''
First, sum is generated by add A and B using an XOR gate
The carry is generated when both A and B
'''
from xor_gate import XOR
from and_gate import AND

def HALFADDER(a,b):
    if len(a)!=len(b):
        if len(a)>len(b):
            b=b[::-1]
            while len(a)!=len(b):
                b+='0'
            a=a[::-1]
        else:
            a=a[::-1]
            while len(a)!=len(b):
                a+='0'
            b=b[::-1]

    s=''
    c=''
    print(a,b)
    for i in range(len(a)):
        o=XOR(a[i],b[i])
        co=AND(a[i],b[i])
        if c!='':
            s+=o
        else:
            o=XOR(a[i],b[i],c)


if __name__=="__main__":
    b1=input("enter the 1st binary number :")
    b2=input("enter the 2nd binary number :")
    o=print("the sum of the two binary is:",HALFADDER(b1,b2))
